{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","people","knowledge","name","occupation","photo","process","profiles","timestamp","App","react_default","a","createElement","className","class","map","row","href","src","split","id","Linkify_default","paragraph","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,6LCKlCC,eAAS,CACb,CACEC,UAAa,s9DACbC,KAAQ,sEACRC,WAAc,qxCACVC,MAASC,oCAEbC,SAAY,8MACZC,UAAa,gCAEf,CACEN,UAAa,0eACbC,KAAQ,sHACRC,WAAc,orBACdC,MAASC,uCACTC,SAAY,2BACZC,UAAa,gCAEf,CACEN,UAAa,mhDACbC,KAAQ,mFACRC,WAAc,0qDACdC,MAASC,qCACTC,SAAY,8DACZC,UAAa,+BAEf,CACEN,UAAa,o+BACbC,KAAQ,oGACRC,WAAc,guBACdC,MAASC,oCACTC,SAAY,oDACZC,UAAa,gCAEf,CACEN,UAAa,s7CACbC,KAAQ,8FACRC,WAAc,s+CACdC,MAASC,oCACTC,SAAY,mBACZC,UAAa,gCAEf,CACEN,UAAa,6GACbC,KAAQ,iHACRC,WAAc,UACdC,MAASC,mCACTC,SAAY,2BACZC,UAAa,gCAEf,CACEN,UAAa,oaACbC,KAAQ,0DACRC,WAAc,ihDACdC,MAASC,iCACTC,SAAY,yEACZC,UAAa,iCAkCFC,mLA5BX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKE,MAAM,SAAX,8CACAJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACVZ,EAAOc,IAAI,SAAAC,GAAG,OAAIN,EAAAC,EAAAC,cAAA,KAAGK,KAAM,IAAMD,EAAIb,KAAMW,MAAM,eAC9CJ,EAAAC,EAAAC,cAAA,OAAKM,IAAKF,EAAIX,MAAOQ,UAAU,uBAC/BH,EAAAC,EAAAC,cAAA,OAAKE,MAAM,oBAAoBE,EAAIb,KAAKgB,MAAM,KAAK,QAG3DT,EAAAC,EAAAC,cAAA,OAAKE,MAAM,UACVb,EAAOc,IAAI,SAAAC,GAAG,OAAIN,EAAAC,EAAAC,cAAA,OAAKE,MAAM,SAASM,GAAIJ,EAAIb,MAC7CO,EAAAC,EAAAC,cAACS,EAAAV,EAAD,KACAD,EAAAC,EAAAC,cAAA,OAAKE,MAAM,mBAAmBE,EAAIb,MAClCO,EAAAC,EAAAC,cAAA,OAAKE,MAAM,qBAAqBI,IAAKF,EAAIX,QACzCK,EAAAC,EAAAC,cAAA,OAAKE,MAAM,SAAX,6EACAJ,EAAAC,EAAAC,cAAA,OAAKE,MAAM,UAAUE,EAAIZ,WAAWe,MAAM,OAAOJ,IAAI,SAAAO,GAAS,OAAIZ,EAAAC,EAAAC,cAAA,OAAKE,MAAM,gBAAgBQ,MAC7FZ,EAAAC,EAAAC,cAAA,OAAKE,MAAM,SAAX,mHACAJ,EAAAC,EAAAC,cAAA,OAAKE,MAAM,UAAUE,EAAId,WACzBQ,EAAAC,EAAAC,cAAA,OAAKE,MAAM,SAAX,oDACAJ,EAAAC,EAAAC,cAAA,OAAKE,MAAM,UAAUE,EAAIT,uBArBjBgB,aCrDEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOpB,EAAAC,EAAAC,cAACmB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.e6cd3885.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport Linkify from 'react-linkify';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst people = [\n  {\n    \"knowledge\": \"Продакт-менеджмент, все аспекты стартапинга, Тверь, Екатеринбург, Москва, Лондон, Барселона, граффити и стритарт, шахматы, техно-хаус-джаз-хипхоп музыка, стратегический консалтинг, аудит, кейс-чемпионаты, финансовая аналитика, ВШЭ, английский и испанский язык, executive search, организация форумов, развитие сообществ, психология, долгие романтические отношения и их конец, путь к счастью и чилл по жизни :)\",\n    \"name\": \"Вася Сиников\",\n    \"occupation\": \"Соосновал, накодил и надизайнил MVP, а теперь управляю развитием продуктов в www.compensair.com Обращайтесь, если у вас задержат рейс, мы выплатили уже больше 2 млн евро компенсаций. До этого учился и работал околоэкономистом. Слушаю музыку, рисую граффити, играю в шахматы\",\n        \"photo\": process.env.PUBLIC_URL + \"/photos/sinikov.png\",\n\n    \"profiles\": \"Добавляйтесь в друзьяшки https://vk.com/va.sinikov t.me/sinikov www.linkedin.com/in/vasinikov\",\n    \"timestamp\": \"2019/01/25 12:00:11 PM GMT+3\"\n  },\n  {\n    \"knowledge\": \"О Москве, градостроительстве, урбанистике, строительстве, истории, инвестициях, девелопменте\",\n    \"name\": \"Александр Землянский\",\n    \"occupation\": \"Девелопмент, строительство, инвестиции, привлечение инвестиций, собственные пабы, футбол, батуты, гитара, не люблю демократию (привет)\",\n    \"photo\": process.env.PUBLIC_URL + \"/photos/zemlyansky.png\",\n    \"profiles\": \"https://vk.com/alexvzeml\",\n    \"timestamp\": \"2019/01/26 12:41:08 AM GMT+3\"\n  },\n  {\n    \"knowledge\": \"Интеллектуальное волонтерство, наставничество, консалтинг для НКО\\nСостою в 7 молодежных сообществах помимо Каппа Веди, могу рассказать про них\\nРаньше писал стихи, сейчас пишу кейсы\\nХочу научиться играть в сквош, ищу напарника.\\nВ прошлом году посетил 10 европейских стран , могу рассказать о своем опыте.\",\n    \"name\": \"Сергей Шершень \",\n    \"occupation\": \"Начальник отдела управления талантами в Федеральной пассажирской компании. Раньше работал в Ростехе, Мегафоне, Альфа Банке, Роснефти, BCG и Strategy Partners Group.\\n\\nПишу кандидатскую диссертацию по пенсионной реформе\\n\\nОсновал наставнический проект my-mentor.ru, наша команда победила на конкурсе \\\"Доброволец России - 2018\\\" в номинации \\\"корпоративное волонтерство\\\"\",\n    \"photo\": process.env.PUBLIC_URL + \"/photos/shershen.jpg\",\n    \"profiles\": \"https://vk.com/sergshen\\nhttps://www.facebook.com/sergshen1\",\n    \"timestamp\": \"2019/01/26 1:16:03 PM GMT+3\"\n  },\n  {\n    \"knowledge\": \"Рациональное мышление, оптимизация бизнес-процессов, научпоп, научная фантастика, архитектура, продукция виноделия Пьемонта, путешествия по России (70+ городов), волонтерство, трубная арматура.\",\n    \"name\": \"Анастасия Гапонец\",\n    \"occupation\": \"Опыт работы в John Deere и General Electric. Работала фин.директором на винодельне в Италии. Сейчас являюсь финансовым директором на металлургическом предприятии. \",\n    \"photo\": process.env.PUBLIC_URL + \"/photos/gaponec.jpg\",\n    \"profiles\": \"https://vk.com/siberria\\nhttps://www.facebook.com\",\n    \"timestamp\": \"2019/01/26 12:57:14 AM GMT+3\"\n  },\n  {\n    \"knowledge\": \"маркетинг сложных сервисов, таргетинг, CPA-сети, работа с аудиторией 14-25, кроссовки, монетизация телеграм-каналов, рестораны, доставки еды и другие способы поесть, практика стендап-комедии и скучная теория юмора, как потерять загранпаспорт накануне вылета и как этого можно было избежать\",\n    \"name\": \"Даниэль Фельдман\",\n    \"occupation\": \"Я придумал и делаю СНИКЕРСЕЙЛ - сервис для поиска лучших цен на обувь. До этого в Microsoft отвечал за B2B маркетинг облачных сервисов. В свободное от работы время стараюсь вести телеграм-канал @kudaeda про московские рестораны. И ем в них. В свободное от работы и канала время (кого я обманываю) занимаюсь стенд-апом\",\n    \"photo\": process.env.PUBLIC_URL + \"/photos/feldman.jpg\",\n    \"profiles\": \"tlg.wtf/feldmand\",\n    \"timestamp\": \"2019/01/26 12:23:46 AM GMT+3\"\n  },\n  {\n    \"knowledge\": \"Урал, баня, Потанинка\",\n    \"name\": \"Рафаэль Валиахметов \",\n    \"occupation\": \"SAP ERP\",\n    \"photo\": process.env.PUBLIC_URL + \"/photos/rafael.jpg\",\n    \"profiles\": \"intentionally left blank\",\n    \"timestamp\": \"2019/01/26 12:49:18 AM GMT+3\"\n  },\n  {\n    \"knowledge\": \"Анализ данных, машинное обучение (кроме компьютерного зрения). Жизнь в Тель-Авиве.\",\n    \"name\": \"Давид Дале\",\n    \"occupation\": \"Программирую текстовый движок Алисы, до этого был аналитиком в Yandex Data Factory и Альфа-Банке (кредитный скоринг). Временами преподаю прикладную математику (преимущественно теорвер/матстат/анализ данных). Приложил руку к созданию кейс-школы Феникс. Всё никак не доделаю пакет с новой эконометрической моделькой. \",\n    \"photo\": process.env.PUBLIC_URL + \"/photos/dale.jpg\",\n    \"profiles\": \"vk.com/dale.david\\nfacebook.com/dale.david.fluteman\\nt.me/cointegrated\",\n    \"timestamp\": \"2019/01/25 9:05:39 PM GMT+3\"\n  }\n];\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div class=\"title\">Пиплбук</div>\n        <div className=\"toc\">\n            {people.map(row => <a href={\"#\" + row.name} class=\"toc__person\">\n                <img src={row.photo} className=\"photo photo--small\" />\n                <div class=\"name name--brief\">{row.name.split(' ')[0]}</div>\n            </a>)}\n        </div>\n        <div class=\"people\">\n        {people.map(row => <div class=\"person\" id={row.name}>\n          <Linkify>\n          <div class=\"name name--full\">{row.name}</div>\n          <img class=\"photo photo--large\" src={row.photo} />\n          <div class=\"label\">Чем занимаюсь</div>\n          <div class=\"answer\">{row.occupation.split(/\\n+/).map(paragraph => <div class=\"answer-chunk\">{paragraph}</div>)}</div>\n          <div class=\"label\">О чем могу рассказать</div>\n          <div class=\"answer\">{row.knowledge}</div>\n          <div class=\"label\">Контакты</div>\n          <div class=\"answer\">{row.profiles}</div>\n          </Linkify>\n          </div>)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}